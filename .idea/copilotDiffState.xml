<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.MD">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.MD" />
              <option name="updatedContent" value="# Projeto de Assistência Técnica&#10;&#10;Este projeto é um sistema de assistência técnica desenvolvido em Java, com o objetivo de gerenciar o atendimento ao cliente, controle de estoque e ordens de serviço.&#10;&#10;## Funcionalidades&#10;&#10;1. **Cadastro de Cliente**&#10;   - Permite o registro de novos clientes no sistema, armazenando informações como nome, CPF, e contato.&#10;&#10;2. **Cadastro de Aparelho**&#10;   - Possibilita o cadastro de aparelhos trazidos pelos clientes para manutenção ou conserto.&#10;&#10;3. **Seleção de Peça**&#10;   - Permite consultar a disponibilidade e o preço de peças no estoque antes de realizar o serviço.&#10;&#10;4. **Geração de Ordem de Serviço**&#10;   - Cria ordens de serviço detalhando o serviço a ser realizado, peças utilizadas e valores.&#10;&#10;5. **Geração da Notificação ao Cliente**&#10;   - Envia notificações ao cliente sobre o status do serviço, valores e prazos.&#10;&#10;## Controle de Estoque&#10;&#10;- O módulo `ControleEstoque` é utilizado para buscar peças no estoque, garantindo que apenas peças disponíveis possam ser selecionadas para os serviços.&#10;&#10;## Estrutura do Projeto&#10;&#10;O projeto está organizado em pacotes para facilitar a manutenção e a escalabilidade, incluindo módulos para modelo de dados, controle de estoque, configuração de banco de dados e funcionalidades principais.&#10;&#10;---&#10;&#10;Este sistema visa otimizar o fluxo de trabalho em assistências técnicas, proporcionando agilidade e organização no atendimento ao cliente e na gestão de serviços." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/untitled/src/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/untitled/src/Main.java" />
              <option name="originalContent" value="import modelo.Cliente;&#10;import modelo.Aparelho;&#10;import utilitario.ClienteDAO;&#10;import utilitario.AparelhoDAO;&#10;import utilitario.ControleEstoque;&#10;&#10;import java.util.Scanner;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Scanner sc = new Scanner(System.in);&#10;&#10;        System.out.println(&quot;=== Cadastro de model.Cliente ===&quot;);&#10;        System.out.print(&quot;Nome: &quot;);&#10;        String nome = sc.nextLine();&#10;        System.out.print(&quot;Sobrenome: &quot;);&#10;        String sobrenome = sc.nextLine();&#10;        System.out.print(&quot;CPF: &quot;);&#10;        String cpf = sc.nextLine();&#10;        System.out.print(&quot;Email: &quot;);&#10;        String email = sc.nextLine();&#10;        System.out.print(&quot;DDD: &quot;);&#10;        String ddd = sc.nextLine();&#10;        System.out.print(&quot;Número Celular: &quot;);&#10;        String numeroCelular = sc.nextLine();&#10;&#10;        Cliente cliente = new Cliente(nome, sobrenome, cpf, email, ddd, numeroCelular);&#10;        // Salvar cliente no banco de dados&#10;        ClienteDAO clienteDAO = new ClienteDAO();&#10;        clienteDAO.salvarCliente(cliente);&#10;&#10;        System.out.println(&quot;model.Cliente cadastrado com sucesso!&quot;);&#10;&#10;        System.out.println(&quot;=== Cadastro de Aparelho ===&quot;);&#10;        System.out.print(&quot;Modelo: &quot;);&#10;        String modeloAparelho = sc.nextLine();&#10;        System.out.print(&quot;Ano: &quot;);&#10;        int anoAparelho = Integer.parseInt(sc.nextLine());&#10;        System.out.print(&quot;Descrição do Problema: &quot;);&#10;        String descricaoProblema = sc.nextLine();&#10;        System.out.print(&quot;Estado do Aparelho: &quot;);&#10;        String estadoAparelho = sc.nextLine();&#10;        System.out.print(&quot;IMEI do Aparelho: &quot;);&#10;        String imeiAparelho = sc.nextLine();&#10;&#10;        Aparelho aparelho = new Aparelho(modeloAparelho, anoAparelho, descricaoProblema, estadoAparelho, imeiAparelho);&#10;        AparelhoDAO aparelhoDAO = new AparelhoDAO();&#10;        aparelhoDAO.salvarAparelho(aparelho);&#10;        System.out.println(&quot;Aparelho cadastrado com sucesso!&quot;);&#10;&#10;        // Seleção de Peças&#10;        ControleEstoque estoque = new ControleEstoque();&#10;        System.out.println(&quot;=== Consulta de Peças Disponíveis ===&quot;);&#10;        estoque.consultarEstoque();&#10;        System.out.print(&quot;Digite os IDs das peças desejadas, separados por vírgula: &quot;);&#10;        String idsPecasStr = sc.nextLine();&#10;        String[] idsPecasArray = idsPecasStr.split(&quot;,&quot;);&#10;        int[] idsPecas = new int[idsPecasArray.length];&#10;        for (int i = 0; i &lt; idsPecasArray.length; i++) {&#10;            idsPecas[i] = Integer.parseInt(idsPecasArray[i].trim());&#10;        }&#10;        System.out.println(&quot;Peças selecionadas com sucesso!&quot;);&#10;&#10;//        ControleEstoque estoque = new ControleEstoque();&#10;//        estoque.consultarEstoque();&#10;//&#10;//        System.out.println(&quot;=== Criando Ordem de Serviço ===&quot;);&#10;//        OrdemDeServico ordem = new OrdemDeServico(1, &quot;Troca de Tela&quot;, 3, new int[]{1});&#10;//        System.out.println(&quot;Preço total: &quot; + ordem.getPreco());&#10;//&#10;//        Pagamento pagamento = new Pagamento(&quot;pix&quot;);&#10;//        double precoFinal = pagamento.aplicarTaxa(ordem.getPreco());&#10;//        pagamento.setPago(true);&#10;//&#10;//        NotificacaoCliente notificacao = new NotificacaoCliente(cliente.getNome(), ordem.getTituloPedido(),&#10;//                ordem.getDataSaida().toString(), precoFinal, pagamento.isPago());&#10;//        notificacao.enviarNotificacao();&#10;&#10;        sc.close();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="import modelo.Cliente;&#10;import modelo.Aparelho;&#10;import modelo.OrdemDeServico;&#10;import modelo.Pagamento;&#10;import modelo.NotificacaoCliente;&#10;import utilitario.ClienteDAO;&#10;import utilitario.AparelhoDAO;&#10;import utilitario.ControleEstoque;&#10;&#10;import java.util.Scanner;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Scanner sc = new Scanner(System.in);&#10;&#10;        System.out.println(&quot;=== Cadastro de model.Cliente ===&quot;);&#10;        System.out.print(&quot;Nome: &quot;);&#10;        String nome = sc.nextLine();&#10;        System.out.print(&quot;Sobrenome: &quot;);&#10;        String sobrenome = sc.nextLine();&#10;        System.out.print(&quot;CPF: &quot;);&#10;        String cpf = sc.nextLine();&#10;        System.out.print(&quot;Email: &quot;);&#10;        String email = sc.nextLine();&#10;        System.out.print(&quot;DDD: &quot;);&#10;        String ddd = sc.nextLine();&#10;        System.out.print(&quot;Número Celular: &quot;);&#10;        String numeroCelular = sc.nextLine();&#10;&#10;        Cliente cliente = new Cliente(nome, sobrenome, cpf, email, ddd, numeroCelular);&#10;        // Salvar cliente no banco de dados&#10;        ClienteDAO clienteDAO = new ClienteDAO();&#10;        clienteDAO.salvarCliente(cliente);&#10;&#10;        System.out.println(&quot;model.Cliente cadastrado com sucesso!&quot;);&#10;&#10;        System.out.println(&quot;=== Cadastro de Aparelho ===&quot;);&#10;        System.out.print(&quot;Modelo: &quot;);&#10;        String modeloAparelho = sc.nextLine();&#10;        System.out.print(&quot;Ano: &quot;);&#10;        int anoAparelho = Integer.parseInt(sc.nextLine());&#10;        System.out.print(&quot;Descrição do Problema: &quot;);&#10;        String descricaoProblema = sc.nextLine();&#10;        System.out.print(&quot;Estado do Aparelho: &quot;);&#10;        String estadoAparelho = sc.nextLine();&#10;        System.out.print(&quot;IMEI do Aparelho: &quot;);&#10;        String imeiAparelho = sc.nextLine();&#10;&#10;        Aparelho aparelho = new Aparelho(modeloAparelho, anoAparelho, descricaoProblema, estadoAparelho, imeiAparelho);&#10;        AparelhoDAO aparelhoDAO = new AparelhoDAO();&#10;        aparelhoDAO.salvarAparelho(aparelho);&#10;        System.out.println(&quot;Aparelho cadastrado com sucesso!&quot;);&#10;&#10;        // Seleção de Peças&#10;        ControleEstoque estoque = new ControleEstoque();&#10;        System.out.println(&quot;=== Consulta de Peças Disponíveis ===&quot;);&#10;        estoque.consultarEstoque();&#10;        System.out.print(&quot;Digite os IDs das peças desejadas, separados por vírgula: &quot;);&#10;        String idsPecasStr = sc.nextLine();&#10;        String[] idsPecasArray = idsPecasStr.split(&quot;,&quot;);&#10;        int[] idsPecas = new int[idsPecasArray.length];&#10;        for (int i = 0; i &lt; idsPecasArray.length; i++) {&#10;            idsPecas[i] = Integer.parseInt(idsPecasArray[i].trim());&#10;        }&#10;        System.out.println(&quot;Peças selecionadas com sucesso!&quot;);&#10;&#10;        // Geração de Ordem de Serviço&#10;        System.out.println(&quot;=== Criando Ordem de Serviço ===&quot;);&#10;        System.out.print(&quot;Título do Pedido: &quot;);&#10;        String tituloPedido = sc.nextLine();&#10;        System.out.print(&quot;Horas trabalhadas (estimativa): &quot;);&#10;        int horasTrabalhadas = Integer.parseInt(sc.nextLine());&#10;        OrdemDeServico ordem = new OrdemDeServico(1, tituloPedido, horasTrabalhadas, idsPecas);&#10;        System.out.println(&quot;Preço total: &quot; + ordem.getPreco());&#10;&#10;        // Pagamento&#10;        System.out.print(&quot;Forma de pagamento (pix, dinheiro, debito, credito): &quot;);&#10;        String formaPagamento = sc.nextLine();&#10;        Pagamento pagamento = new Pagamento(formaPagamento);&#10;        double precoFinal = pagamento.aplicarTaxa(ordem.getPreco());&#10;        pagamento.setPago(true);&#10;        System.out.println(&quot;Valor final com taxa: &quot; + precoFinal);&#10;&#10;        // Notificação ao Cliente&#10;        NotificacaoCliente notificacao = new NotificacaoCliente(&#10;            cliente.getNome(), ordem.getTituloPedido(),&#10;            ordem.getDataSaida().toString(), precoFinal, pagamento.isPago()&#10;        );&#10;        notificacao.enviarNotificacao();&#10;&#10;        sc.close();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/untitled/src/modelo/AparelhoDAO.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/untitled/src/modelo/AparelhoDAO.java" />
              <option name="updatedContent" value="package modelo;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.SQLException;&#10;import config.Database;&#10;&#10;public class AparelhoDAO {&#10;    public void salvarAparelho(Aparelho aparelho) {&#10;        String sql = &quot;INSERT INTO aparelhos (modelo, ano, descricao_problema, estado_aparelho, imei) VALUES (?, ?, ?, ?, ?)&quot;;&#10;        try (Connection conn = Database.getConnection();&#10;             PreparedStatement stmt = conn.prepareStatement(sql)) {&#10;            stmt.setString(1, aparelho.getModelo());&#10;            stmt.setInt(2, aparelho.getAno());&#10;            stmt.setString(3, aparelho.getDescricaoProblema());&#10;            stmt.setString(4, aparelho.getEstadoAparelho());&#10;            stmt.setString(5, aparelho.getImei());&#10;            stmt.executeUpdate();&#10;        } catch (SQLException e) {&#10;            System.out.println(&quot;Erro ao salvar aparelho: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/untitled/src/modelo/ClienteDAO.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/untitled/src/modelo/ClienteDAO.java" />
              <option name="updatedContent" value="package modelo;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.SQLException;&#10;import config.Database;&#10;&#10;public class ClienteDAO {&#10;    public void salvarCliente(Cliente cliente) {&#10;        String sql = &quot;INSERT INTO clientes (nome, sobrenome, cpf, email, ddd, numero_celular, imei) VALUES (?, ?, ?, ?, ?, ?, ?)&quot;;&#10;        try (Connection conn = Database.getConnection();&#10;             PreparedStatement stmt = conn.prepareStatement(sql)) {&#10;            stmt.setString(1, cliente.getNome());&#10;            stmt.setString(2, cliente.getSobrenome());&#10;            stmt.setString(3, cliente.getCpf());&#10;            stmt.setString(4, cliente.getEmail());&#10;            stmt.setString(5, cliente.getDdd());&#10;            stmt.setString(6, cliente.getNumeroCelular());&#10;            stmt.setString(7, cliente.getImei());&#10;            stmt.executeUpdate();&#10;        } catch (SQLException e) {&#10;            System.out.println(&quot;Erro ao salvar cliente: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/untitled/src/utilitario/ClienteDAO.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/untitled/src/utilitario/ClienteDAO.java" />
              <option name="originalContent" value="package utilitario;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.SQLException;&#10;import config.Database;&#10;import modelo.Cliente;&#10;&#10;public class ClienteDAO {&#10;    public void salvarCliente(Cliente cliente) {&#10;        String sql = &quot;INSERT INTO clientes (nome, sobrenome, cpf, email, ddd, numero_celular, imei) VALUES (?, ?, ?, ?, ?, ?, ?)&quot;;&#10;        try (Connection conn = Database.getConnection();&#10;             PreparedStatement stmt = conn.prepareStatement(sql)) {&#10;            stmt.setString(1, cliente.getNome());&#10;            stmt.setString(2, cliente.getSobrenome());&#10;            stmt.setString(3, cliente.getCpf());&#10;            stmt.setString(4, cliente.getEmail());&#10;            stmt.setString(5, cliente.getDdd());&#10;            stmt.setString(6, cliente.getNumeroCelular());&#10;            stmt.setString(7, cliente.getImei());&#10;            stmt.executeUpdate();&#10;        } catch (SQLException e) {&#10;            System.out.println(&quot;Erro ao salvar cliente: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package utilitario;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.SQLException;&#10;import config.Database;&#10;import modelo.Cliente;&#10;&#10;public class ClienteDAO {&#10;    public void salvarCliente(Cliente cliente) {&#10;        String sql = &quot;INSERT INTO clientes (nome, sobrenome, cpf, email, ddd, numero_celular) VALUES (?, ?, ?, ?, ?, ?)&quot;;&#10;        try (Connection conn = Database.getConnection();&#10;             PreparedStatement stmt = conn.prepareStatement(sql)) {&#10;            stmt.setString(1, cliente.getNome());&#10;            stmt.setString(2, cliente.getSobrenome());&#10;            stmt.setString(3, cliente.getCpf());&#10;            stmt.setString(4, cliente.getEmail());&#10;            stmt.setString(5, cliente.getDdd());&#10;            stmt.setString(6, cliente.getNumeroCelular());&#10;            stmt.executeUpdate();&#10;        } catch (SQLException e) {&#10;            System.out.println(&quot;Erro ao salvar cliente: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>